/**
 * Modules in this bundle
 * @license
 * 
 * 337beat:
 *   license: MIT (http://opensource.org/licenses/MIT)
 *   author: Mitsuru Takigahira
 *   homepage: https://github.com/MysticDoll/337beat#readme
 *   version: 1.0.0
 * 
 * This header is generated by licensify (https://github.com/twada/licensify)
 */
(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";

var isIntervalValid = function isIntervalValid(arr) {
  var validInterval = Math.abs(arr[0] - arr[arr.length - 1]) / 14;
  var intervals = arr.map(function (v, i) {
    return Math.abs(arr[i + 1] - v);
  }).filter(function (v) {
    return !Number.isNaN(v);
  });
  intervals[2] /= 2, intervals[5] /= 2;
  return intervals.reduce(function (pre, cur) {
    return pre && Math.abs(cur - validInterval) < validInterval / 4;
  }, true);
};
module.exports = function (ttsQueue, renderer) {
  return renderer(isIntervalValid(ttsQueue), document.querySelector("#is_tts"));
};

},{}],2:[function(require,module,exports){
"use strict";

var date = {};
Object.defineProperty(date, "now", { get: function get() {
    return Date.now();
  } });
module.exports = date;

},{}],3:[function(require,module,exports){
"use strict";

var touchFrag = false,
    ttsQueue = [],
    orig = Array.prototype,
    date = require("./date"),
    check = require("./check"),
    renderer = require("./renderer"),
    drum = document.getElementById("drum_icon");
ttsQueue.push = function () {
  orig.push.apply(this, arguments);
  if (this.length > 13) {
    this.shift();
    check(this, renderer);
  } else if (this.length === 13) {
    check(this, renderer);
  }
};

drum.addEventListener("touchstart", function () {
  ttsQueue.push(date.now);
  touchFrag = true;
});

drum.addEventListener("click", function () {
  touchFrag ? touchFrag = false : ttsQueue.push(date.now);
});

window.addEventListener("keydown", function () {
  ttsQueue.push(date.now);
});

},{"./check":1,"./date":2,"./renderer":4}],4:[function(require,module,exports){
"use strict";

module.exports = function (is337Beat, elm) {
  return elm.textContent = is337Beat ? "三・三・七拍子！！！！！！！！！！" : "not 三・三・七拍子";
};

},{}]},{},[3])
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmNcXGNoZWNrLmpzIiwic3JjXFxkYXRlLmpzIiwic3JjXFxpbmRleC5qcyIsInNyY1xccmVuZGVyZXIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUE7OztBQ0FBLElBQUksa0JBQWtCLFNBQWxCLGVBQWtCLENBQVMsR0FBVCxFQUFjO0FBQ2xDLE1BQUksZ0JBQWdCLEtBQUssR0FBTCxDQUFTLElBQUksQ0FBSixJQUFTLElBQUksSUFBSSxNQUFKLEdBQWEsQ0FBYixDQUFiLENBQVQsR0FBeUMsRUFBekMsQ0FEYztBQUVsQyxNQUFJLFlBQVksSUFBSSxHQUFKLENBQVEsVUFBQyxDQUFELEVBQUksQ0FBSjtXQUFRLEtBQUssR0FBTCxDQUFTLElBQUksSUFBSSxDQUFKLENBQUosR0FBYSxDQUFiO0dBQWpCLENBQVIsQ0FDYixNQURhLENBQ04sVUFBQyxDQUFEO1dBQUssQ0FBQyxPQUFPLEtBQVAsQ0FBYSxDQUFiLENBQUQ7R0FBTCxDQUROLENBRjhCO0FBSWxDLFlBQVUsQ0FBVixLQUFnQixDQUFoQixFQUFtQixVQUFVLENBQVYsS0FBZ0IsQ0FBaEIsQ0FKZTtBQUtsQyxTQUFPLFVBQVUsTUFBVixDQUFpQixVQUFDLEdBQUQsRUFBTSxHQUFOO1dBQWMsT0FBTyxLQUFLLEdBQUwsQ0FBUyxNQUFNLGFBQU4sQ0FBVCxHQUFnQyxnQkFBZ0IsQ0FBaEI7R0FBckQsRUFBd0UsSUFBekYsQ0FBUCxDQUxrQztDQUFkO0FBUXRCLE9BQU8sT0FBUCxHQUFpQixVQUFDLFFBQUQsRUFBVyxRQUFYO1NBQXdCLFNBQVMsZ0JBQWdCLFFBQWhCLENBQVQsRUFBb0MsU0FBUyxhQUFULENBQXVCLFNBQXZCLENBQXBDO0NBQXhCOzs7OztBQ1JqQixJQUFJLE9BQU8sRUFBUDtBQUNKLE9BQU8sY0FBUCxDQUFzQixJQUF0QixFQUE0QixLQUE1QixFQUFtQyxFQUFDLEtBQUs7V0FBSSxLQUFLLEdBQUw7R0FBSixFQUF6QztBQUNBLE9BQU8sT0FBUCxHQUFpQixJQUFqQjs7O0FDRkE7O0FBQ0EsSUFBSSxZQUFZLEtBQVo7SUFBbUIsV0FBVyxFQUFYO0lBQ25CLE9BQU8sTUFBTSxTQUFOO0lBQ1AsT0FBTyxRQUFRLFFBQVIsQ0FBUDtJQUNBLFFBQVEsUUFBUSxTQUFSLENBQVI7SUFDQSxXQUFXLFFBQVEsWUFBUixDQUFYO0lBQ0EsT0FBTyxTQUFTLGNBQVQsQ0FBd0IsV0FBeEIsQ0FBUDtBQUNKLFNBQVMsSUFBVCxHQUFnQixZQUFXO0FBQ3pCLE9BQUssSUFBTCxDQUFVLEtBQVYsQ0FBZ0IsSUFBaEIsRUFBc0IsU0FBdEIsRUFEeUI7QUFFekIsTUFBRyxLQUFLLE1BQUwsR0FBYyxFQUFkLEVBQWtCO0FBQ25CLFNBQUssS0FBTCxHQURtQjtBQUVuQixVQUFNLElBQU4sRUFBWSxRQUFaLEVBRm1CO0dBQXJCLE1BR08sSUFBRyxLQUFLLE1BQUwsS0FBZ0IsRUFBaEIsRUFBb0I7QUFDNUIsVUFBTSxJQUFOLEVBQVksUUFBWixFQUQ0QjtHQUF2QjtDQUxPOztBQVVoQixLQUFLLGdCQUFMLENBQXNCLFlBQXRCLEVBQW9DLFlBQVc7QUFDN0MsV0FBUyxJQUFULENBQWMsS0FBSyxHQUFMLENBQWQsQ0FENkM7QUFFN0MsY0FBWSxJQUFaLENBRjZDO0NBQVgsQ0FBcEM7O0FBS0EsS0FBSyxnQkFBTCxDQUFzQixPQUF0QixFQUErQixZQUFXO0FBQ3hDLGNBQVksWUFBWSxLQUFaLEdBQW9CLFNBQVMsSUFBVCxDQUFjLEtBQUssR0FBTCxDQUE5QyxDQUR3QztDQUFYLENBQS9COztBQUlBLE9BQU8sZ0JBQVAsQ0FBd0IsU0FBeEIsRUFBbUMsWUFBVztBQUM1QyxXQUFTLElBQVQsQ0FBYyxLQUFLLEdBQUwsQ0FBZCxDQUQ0QztDQUFYLENBQW5DOzs7OztBQzFCQSxPQUFPLE9BQVAsR0FBaUIsVUFBQyxTQUFELEVBQVksR0FBWjtTQUFvQixJQUFJLFdBQUosR0FBa0IsWUFBWSxtQkFBWixHQUFrQyxhQUFsQztDQUF0QyIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIGUodCxuLHIpe2Z1bmN0aW9uIHMobyx1KXtpZighbltvXSl7aWYoIXRbb10pe3ZhciBhPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7aWYoIXUmJmEpcmV0dXJuIGEobywhMCk7aWYoaSlyZXR1cm4gaShvLCEwKTt2YXIgZj1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK28rXCInXCIpO3Rocm93IGYuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixmfXZhciBsPW5bb109e2V4cG9ydHM6e319O3Rbb11bMF0uY2FsbChsLmV4cG9ydHMsZnVuY3Rpb24oZSl7dmFyIG49dFtvXVsxXVtlXTtyZXR1cm4gcyhuP246ZSl9LGwsbC5leHBvcnRzLGUsdCxuLHIpfXJldHVybiBuW29dLmV4cG9ydHN9dmFyIGk9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtmb3IodmFyIG89MDtvPHIubGVuZ3RoO28rKylzKHJbb10pO3JldHVybiBzfSkiLCJ2YXIgaXNJbnRlcnZhbFZhbGlkID0gZnVuY3Rpb24oYXJyKSB7XHJcbiAgdmFyIHZhbGlkSW50ZXJ2YWwgPSBNYXRoLmFicyhhcnJbMF0gLSBhcnJbYXJyLmxlbmd0aCAtIDFdKSAvIDE0O1xyXG4gIHZhciBpbnRlcnZhbHMgPSBhcnIubWFwKCh2LCBpKT0+TWF0aC5hYnMoYXJyW2kgKyAxXSAtIHYpKVxyXG4gICAgLmZpbHRlcigodik9PiFOdW1iZXIuaXNOYU4odikpO1xyXG4gIGludGVydmFsc1syXSAvPSAyLCBpbnRlcnZhbHNbNV0gLz0gMjtcclxuICByZXR1cm4gaW50ZXJ2YWxzLnJlZHVjZSgocHJlLCBjdXIpID0+IHByZSAmJiBNYXRoLmFicyhjdXIgLSB2YWxpZEludGVydmFsKSA8IHZhbGlkSW50ZXJ2YWwgLyA0LCB0cnVlKTtcclxuICBcclxufTtcclxubW9kdWxlLmV4cG9ydHMgPSAodHRzUXVldWUsIHJlbmRlcmVyKSA9PiByZW5kZXJlcihpc0ludGVydmFsVmFsaWQodHRzUXVldWUpLCBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2lzX3R0c1wiKSk7XHJcbiIsInZhciBkYXRlID0ge307XHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShkYXRlLCBcIm5vd1wiLCB7Z2V0OiAoKT0+RGF0ZS5ub3coKX0pO1xyXG5tb2R1bGUuZXhwb3J0cyA9IGRhdGU7XHJcbiIsIlwidXNlIHN0cmljdFwiO1xyXG52YXIgdG91Y2hGcmFnID0gZmFsc2UsIHR0c1F1ZXVlID0gW10sXHJcbiAgICBvcmlnID0gQXJyYXkucHJvdG90eXBlLFxyXG4gICAgZGF0ZSA9IHJlcXVpcmUoXCIuL2RhdGVcIiksXHJcbiAgICBjaGVjayA9IHJlcXVpcmUoXCIuL2NoZWNrXCIpLFxyXG4gICAgcmVuZGVyZXIgPSByZXF1aXJlKFwiLi9yZW5kZXJlclwiKSxcclxuICAgIGRydW0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImRydW1faWNvblwiKTtcclxudHRzUXVldWUucHVzaCA9IGZ1bmN0aW9uKCkge1xyXG4gIG9yaWcucHVzaC5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xyXG4gIGlmKHRoaXMubGVuZ3RoID4gMTMpIHtcclxuICAgIHRoaXMuc2hpZnQoKTtcclxuICAgIGNoZWNrKHRoaXMsIHJlbmRlcmVyKTtcclxuICB9IGVsc2UgaWYodGhpcy5sZW5ndGggPT09IDEzKSB7XHJcbiAgICBjaGVjayh0aGlzLCByZW5kZXJlcik7XHJcbiAgfVxyXG59O1xyXG5cclxuZHJ1bS5hZGRFdmVudExpc3RlbmVyKFwidG91Y2hzdGFydFwiLCBmdW5jdGlvbigpIHtcclxuICB0dHNRdWV1ZS5wdXNoKGRhdGUubm93KTtcclxuICB0b3VjaEZyYWcgPSB0cnVlO1xyXG59KTtcclxuXHJcbmRydW0uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uKCkge1xyXG4gIHRvdWNoRnJhZyA/IHRvdWNoRnJhZyA9IGZhbHNlIDogdHRzUXVldWUucHVzaChkYXRlLm5vdyk7XHJcbn0pO1xyXG5cclxud2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIGZ1bmN0aW9uKCkge1xyXG4gIHR0c1F1ZXVlLnB1c2goZGF0ZS5ub3cpO1xyXG59KTtcclxuIiwibW9kdWxlLmV4cG9ydHMgPSAoaXMzMzdCZWF0LCBlbG0pID0+IGVsbS50ZXh0Q29udGVudCA9IGlzMzM3QmVhdCA/IFwi5LiJ44O75LiJ44O75LiD5ouN5a2Q77yB77yB77yB77yB77yB77yB77yB77yB77yB77yBXCIgOiBcIm5vdCDkuInjg7vkuInjg7vkuIPmi43lrZBcIjtcclxuIl19
